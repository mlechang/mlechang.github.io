<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>mle chang</title><link href="http://mlechang.github.io/" rel="alternate"></link><link href="http://mlechang.github.io/feeds/all.atom.xml" rel="self"></link><id>http://mlechang.github.io/</id><updated>2016-06-18T00:00:00-04:00</updated><entry><title>Setting up your Pelican blog on GitHub Pages</title><link href="http://mlechang.github.io/setting-up-pelican-blog-github-pages.html" rel="alternate"></link><published>2016-06-18T00:00:00-04:00</published><author><name>mlechang</name></author><id>tag:mlechang.github.io,2016-06-18:setting-up-pelican-blog-github-pages.html</id><summary type="html">&lt;p&gt;Step 1: Follow &lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;this tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Step 2: Set up your git pre-commit hook by following &lt;a href="http://mavant.com/blog/2014/03/10/pelican-git-hooks-github-dot-io/"&gt;this tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Step 3: With this set up, you would add a new post simply by saving your post in your content folder, committing from your source directory (wherever your &lt;code&gt;pelicanconf.py&lt;/code&gt; file is located), and then just pushing to origin.&lt;/p&gt;
&lt;p&gt;Woohoo!&lt;/p&gt;
&lt;p&gt;Basically you have two git repositories: one for your blog-source (the main Pelican directory where your &lt;code&gt;publishconf.py&lt;/code&gt; file lives), and one for your output folder, which is rendered, updated and pushed to your GitHub output folder every time you push your commits from blog-source to your GitHub blog-source folder.&lt;/p&gt;</summary><category term="Python"></category><category term="Pelican"></category><category term="blogging"></category></entry></feed>